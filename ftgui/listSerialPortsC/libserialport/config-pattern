/**
 * Set the {2} for the specified serial port.
 *
 * @param[in] port Pointer to a port structure. Must not be NULL.
 * @param[in] {0} {3}.
 *
 * @return SP_OK upon success, a negative error code otherwise.
 *
 * @since 0.1.0
 */
enum sp_return sp_set_{0}(struct sp_port *port, {1} {0});

/**
 * Get the {2} from a port configuration.
 *
 * The user should allocate a variable of type {1} and
 * pass a pointer to this to receive the result.
 *
 * @param[in] config Pointer to a configuration structure. Must not be NULL.
 * @param[out] {0}_ptr Pointer to a variable to store the result. Must not be NULL.
 *
 * @return SP_OK upon success, a negative error code otherwise.
 *
 * @since 0.1.0
 */
enum sp_return sp_get_config_{0}(const struct sp_port_config *config, {1} *{0}_ptr);

/**
 * Set the {2} in a port configuration.
 *
 * @param[in] config Pointer to a configuration structure. Must not be NULL.
 * @param[in] {0} {3}, or -1 to retain the current setting.
 *
 * @return SP_OK upon success, a negative error code otherwise.
 *
 * @since 0.1.0
 */
enum sp_return sp_set_config_{0}(struct sp_port_config *config, {1} {0});
